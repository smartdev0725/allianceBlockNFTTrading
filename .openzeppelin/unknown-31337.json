{
  "manifestVersion": "3.1",
  "impls": {
    "4a6ec7e33d9f93ec6141b8b0e5b05fadcd97145985cb6a5423f68da21621022d": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x095c50f8ba1dc8ba09293933049f191f77d2bf42b62002578017627a7e66ec9d",
      "layout": {
        "storage": [
          {
            "contract": "Protocol",
            "label": "value",
            "type": "t_uint256",
            "src": "contracts/Protocol.sol:7"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "b879775639284e06a748b70affa14333572a60d08f45527bd4c7f355a990b9e5": {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x7ce2bc1ffb7125c89f9e6a1f39118bbc17bd97d61c6f0bf13c9fcab8e250cab4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "RewardDistributionRecipient",
            "label": "rewardDistribution",
            "type": "t_address",
            "src": "contracts/Staking.sol:12"
          },
          {
            "contract": "tokenWrapper",
            "label": "albt",
            "type": "t_contract(IERC20)3639",
            "src": "contracts/Staking.sol:35"
          },
          {
            "contract": "tokenWrapper",
            "label": "governance",
            "type": "t_address",
            "src": "contracts/Staking.sol:37"
          },
          {
            "contract": "tokenWrapper",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:39"
          },
          {
            "contract": "tokenWrapper",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Staking.sol:40"
          },
          {
            "contract": "tokenWrapper",
            "label": "freezed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Staking.sol:41"
          },
          {
            "contract": "Staking",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:70"
          },
          {
            "contract": "Staking",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:71"
          },
          {
            "contract": "Staking",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:72"
          },
          {
            "contract": "Staking",
            "label": "rewardPerTokenStored",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:73"
          },
          {
            "contract": "Staking",
            "label": "userRewardPerTokenPaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Staking.sol:74"
          },
          {
            "contract": "Staking",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Staking.sol:75"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)3639": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5a78dc151b322ce30a907e0a12d095b24e213552aa1b62af486743a5408ae003": {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0xcd4cc530019b8b1b62f0dcb1dbe9373441521c4a333909ba2179e07e548e3d96",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "Governance",
            "label": "isDaoMember",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Governance.sol:24"
          },
          {
            "contract": "Governance",
            "label": "isDaoDelegator",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Governance.sol:25"
          },
          {
            "contract": "Governance",
            "label": "hasVotedForRequestId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/Governance.sol:26"
          },
          {
            "contract": "Governance",
            "label": "totalApprovalRequests",
            "type": "t_uint256",
            "src": "contracts/Governance.sol:28"
          },
          {
            "contract": "Governance",
            "label": "approvalsNeeded",
            "type": "t_uint256",
            "src": "contracts/Governance.sol:29"
          },
          {
            "contract": "Governance",
            "label": "approvalRequests",
            "type": "t_mapping(t_uint256,t_struct(ApprovalRequest)6864_storage)",
            "src": "contracts/Governance.sol:40"
          },
          {
            "contract": "Governance",
            "label": "loanApprovalRequestDuration",
            "type": "t_uint256",
            "src": "contracts/Governance.sol:41"
          },
          {
            "contract": "Governance",
            "label": "milestoneApprovalRequestDuration",
            "type": "t_uint256",
            "src": "contracts/Governance.sol:42"
          },
          {
            "contract": "Governance",
            "label": "amountStakedForDaoMembership",
            "type": "t_uint256",
            "src": "contracts/Governance.sol:43"
          },
          {
            "contract": "Governance",
            "label": "registry",
            "type": "t_contract(IRegistry)9051",
            "src": "contracts/Governance.sol:45"
          },
          {
            "contract": "Governance",
            "label": "staking",
            "type": "t_contract(IStaking)9072",
            "src": "contracts/Governance.sol:46"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ApprovalRequest)6864_storage)": {
            "label": "mapping(uint256 => struct Governance.ApprovalRequest)"
          },
          "t_struct(ApprovalRequest)6864_storage": {
            "label": "struct Governance.ApprovalRequest",
            "members": [
              {
                "label": "loanId",
                "type": "t_uint256"
              },
              {
                "label": "isMilestone",
                "type": "t_bool"
              },
              {
                "label": "milestoneNumber",
                "type": "t_uint256"
              },
              {
                "label": "deadlineTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "approvalsProvided",
                "type": "t_uint256"
              },
              {
                "label": "isApproved",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(IRegistry)9051": {
            "label": "contract IRegistry"
          },
          "t_contract(IStaking)9072": {
            "label": "contract IStaking"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0594a769f582a87072adcb8147b3a4913153f31a3a2b7157a26fe6668d231d62": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0xf4e57f566e5a92f0bd0d9509a12264d5c024a0860e5569e99e76887076839aea",
      "layout": {
        "storage": [
          {
            "contract": "EscrowDetails",
            "label": "registry",
            "type": "t_contract(IRegistry)9051",
            "src": "contracts/EscrowDetails.sol:17"
          },
          {
            "contract": "EscrowDetails",
            "label": "lendingToken",
            "type": "t_contract(IERC20)3639",
            "src": "contracts/EscrowDetails.sol:19"
          },
          {
            "contract": "EscrowDetails",
            "label": "mainNFT",
            "type": "t_contract(IERC721Mint)8984",
            "src": "contracts/EscrowDetails.sol:20"
          },
          {
            "contract": "EscrowDetails",
            "label": "loanNFT",
            "type": "t_contract(IERC1155Mint)8975",
            "src": "contracts/EscrowDetails.sol:21"
          },
          {
            "contract": "EscrowDetails",
            "label": "loanBorrower",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/EscrowDetails.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IRegistry)9051": {
            "label": "contract IRegistry"
          },
          "t_contract(IERC20)3639": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721Mint)8984": {
            "label": "contract IERC721Mint"
          },
          "t_contract(IERC1155Mint)8975": {
            "label": "contract IERC1155Mint"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          }
        }
      }
    },
    "c83a04a2bedfa08f9e52f5d7f6da6f95e8cf622523299efda226b8cf581ed6b5": {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0x8dd98890868d821d4ad0318bdccb1371c1b2ed7a31bd8570122e2684bdfa62b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "Storage",
            "label": "totalLoans",
            "type": "t_uint256",
            "src": "contracts/registry/Storage.sol:16"
          },
          {
            "contract": "Storage",
            "label": "loanDetails",
            "type": "t_mapping(t_uint256,t_struct(LoanDetails)9115_storage)",
            "src": "contracts/registry/Storage.sol:19"
          },
          {
            "contract": "Storage",
            "label": "personalLoanPayments",
            "type": "t_mapping(t_uint256,t_struct(PersonalLoanPayments)9132_storage)",
            "src": "contracts/registry/Storage.sol:21"
          },
          {
            "contract": "Storage",
            "label": "projectLoanPayments",
            "type": "t_mapping(t_uint256,t_struct(ProjectLoanPayments)9157_storage)",
            "src": "contracts/registry/Storage.sol:23"
          },
          {
            "contract": "Storage",
            "label": "loanStatus",
            "type": "t_mapping(t_uint256,t_enum(LoanStatus)9092)",
            "src": "contracts/registry/Storage.sol:25"
          },
          {
            "contract": "Storage",
            "label": "loanBorrower",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/registry/Storage.sol:27"
          },
          {
            "contract": "Storage",
            "label": "governance",
            "type": "t_contract(IGovernance)9033",
            "src": "contracts/registry/Storage.sol:29"
          },
          {
            "contract": "Storage",
            "label": "lendingToken",
            "type": "t_contract(IERC20)3639",
            "src": "contracts/registry/Storage.sol:30"
          },
          {
            "contract": "Storage",
            "label": "mainNFT",
            "type": "t_contract(IERC721Mint)8984",
            "src": "contracts/registry/Storage.sol:31"
          },
          {
            "contract": "Storage",
            "label": "loanNFT",
            "type": "t_contract(IERC1155Mint)8975",
            "src": "contracts/registry/Storage.sol:32"
          },
          {
            "contract": "Storage",
            "label": "escrow",
            "type": "t_contract(IEscrow)9020",
            "src": "contracts/registry/Storage.sol:33"
          },
          {
            "contract": "Storage",
            "label": "baseAmountForEachPartition",
            "type": "t_uint256",
            "src": "contracts/registry/Storage.sol:36"
          },
          {
            "contract": "Storage",
            "label": "minimumInterestPercentage",
            "type": "t_uint256",
            "src": "contracts/registry/Storage.sol:38"
          },
          {
            "contract": "Storage",
            "label": "maxMilestones",
            "type": "t_uint256",
            "src": "contracts/registry/Storage.sol:40"
          },
          {
            "contract": "Storage",
            "label": "milestoneExtensionInterval",
            "type": "t_uint256",
            "src": "contracts/registry/Storage.sol:42"
          },
          {
            "contract": "Storage",
            "label": "vestingBatches",
            "type": "t_uint256",
            "src": "contracts/registry/Storage.sol:44"
          },
          {
            "contract": "Storage",
            "label": "vestingTimeInterval",
            "type": "t_uint256",
            "src": "contracts/registry/Storage.sol:46"
          },
          {
            "contract": "Storage",
            "label": "fundingTimeInterval",
            "type": "t_uint256",
            "src": "contracts/registry/Storage.sol:48"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LoanDetails)9115_storage)": {
            "label": "mapping(uint256 => struct LoanLibrary.LoanDetails)"
          },
          "t_struct(LoanDetails)9115_storage": {
            "label": "struct LoanLibrary.LoanDetails",
            "members": [
              {
                "label": "loanId",
                "type": "t_uint256"
              },
              {
                "label": "loanType",
                "type": "t_enum(LoanType)9080"
              },
              {
                "label": "approvalDate",
                "type": "t_uint256"
              },
              {
                "label": "startingDate",
                "type": "t_uint256"
              },
              {
                "label": "collateralToken",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "lendingAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalPartitions",
                "type": "t_uint256"
              },
              {
                "label": "totalInterest",
                "type": "t_uint256"
              },
              {
                "label": "extraInfo",
                "type": "t_string_storage"
              },
              {
                "label": "partitionsPurchased",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(LoanType)9080": {
            "label": "enum LoanLibrary.LoanType",
            "members": [
              "PERSONAL",
              "PROJECT"
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(PersonalLoanPayments)9132_storage)": {
            "label": "mapping(uint256 => struct LoanLibrary.PersonalLoanPayments)"
          },
          "t_struct(PersonalLoanPayments)9132_storage": {
            "label": "struct LoanLibrary.PersonalLoanPayments",
            "members": [
              {
                "label": "batchesPaid",
                "type": "t_uint256"
              },
              {
                "label": "amountEachBatch",
                "type": "t_uint256"
              },
              {
                "label": "totalAmountOfBatches",
                "type": "t_uint256"
              },
              {
                "label": "timeIntervalBetweenBatches",
                "type": "t_uint256"
              },
              {
                "label": "batchesSkipped",
                "type": "t_uint256"
              },
              {
                "label": "batchStartingTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "batchDeadlineTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "repaymentBatchType",
                "type": "t_enum(RepaymentBatchType)9077"
              }
            ]
          },
          "t_enum(RepaymentBatchType)9077": {
            "label": "enum LoanLibrary.RepaymentBatchType",
            "members": [
              "ONLY_INTEREST",
              "INTEREST_PLUS_NOMINAL"
            ]
          },
          "t_mapping(t_uint256,t_struct(ProjectLoanPayments)9157_storage)": {
            "label": "mapping(uint256 => struct LoanLibrary.ProjectLoanPayments)"
          },
          "t_struct(ProjectLoanPayments)9157_storage": {
            "label": "struct LoanLibrary.ProjectLoanPayments",
            "members": [
              {
                "label": "totalMilestones",
                "type": "t_uint256"
              },
              {
                "label": "milestoneLendingAmount",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "milestoneDuration",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "milestonesDelivered",
                "type": "t_uint256"
              },
              {
                "label": "milestonesExtended",
                "type": "t_uint256"
              },
              {
                "label": "timeDiffBetweenDeliveryAndRepayment",
                "type": "t_uint256"
              },
              {
                "label": "currentMilestoneStartingTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "currentMilestoneDeadlineTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "amountToBeRepaid",
                "type": "t_uint256"
              },
              {
                "label": "discountPerMillion",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_enum(LoanStatus)9092)": {
            "label": "mapping(uint256 => enum LoanLibrary.LoanStatus)"
          },
          "t_enum(LoanStatus)9092": {
            "label": "enum LoanLibrary.LoanStatus",
            "members": [
              "REQUESTED",
              "APPROVED",
              "FUNDING",
              "STARTED",
              "AWAITING_MILESTONE_APPROVAL",
              "AWAITING_REPAYMENT",
              "SETTLED",
              "DEFAULT",
              "LIQUIDATED",
              "REJECTED",
              "AWAITING_MILESTONE_APPLICATION"
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_contract(IGovernance)9033": {
            "label": "contract IGovernance"
          },
          "t_contract(IERC20)3639": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721Mint)8984": {
            "label": "contract IERC721Mint"
          },
          "t_contract(IERC1155Mint)8975": {
            "label": "contract IERC1155Mint"
          },
          "t_contract(IEscrow)9020": {
            "label": "contract IEscrow"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
    "txHash": "0xe463198202c0854ff973aabeab578e5e88577b42d866839398d50731756459f2"
  }
}
